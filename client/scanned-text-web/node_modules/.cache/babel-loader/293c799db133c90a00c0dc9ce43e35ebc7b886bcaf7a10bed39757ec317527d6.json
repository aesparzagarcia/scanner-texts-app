{"ast":null,"code":"// src/MainApp.js\nimport React,{useEffect,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function MainApp(){const[texts,setTexts]=useState([]);const[loading,setLoading]=useState(true);const[filterSection,setFilterSection]=useState('');const[filteredTexts,setFilteredTexts]=useState([]);useEffect(()=>{fetch('http://localhost:3000/texts').then(res=>res.json()).then(data=>{setTexts(data);setFilteredTexts(data);setLoading(false);}).catch(()=>setLoading(false));},[]);const parseMapString=mapString=>{const cleanedString=mapString.trim().replace(/^\\{|\\}$/g,'');const regex=/(\\w+)=((?:[^=,]|=(?!\\w+=))+)/g;const obj={};let match;while((match=regex.exec(cleanedString))!==null){const key=match[1];const value=match[2].trim();obj[key]=value;}return obj;};const[showClearButton,setShowClearButton]=useState(false);// Show or hide clear data base button\nconst handleFilter=()=>{if(!filterSection){setFilteredTexts(texts);return;}const filtered=texts.filter(_ref=>{let{content}=_ref;const data=parseMapString(content);return data.seccion===filterSection;});setFilteredTexts(filtered);};const handleClearFilter=()=>{setFilterSection('');setFilteredTexts(texts);};const handleClearDatabase=()=>{if(!window.confirm('Are you sure you want to clear the database? This action cannot be undone.'))return;fetch('http://localhost:3000/texts',{method:'DELETE'}).then(res=>{if(res.ok){setTexts([]);setFilteredTexts([]);alert('Database cleared!');}else{alert('Failed to clear database');}}).catch(()=>alert('Error clearing database'));};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:20},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Info scaneada\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:20},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Filtrar por secci\\xF3n\",value:filterSection,onChange:e=>setFilterSection(e.target.value),style:{marginRight:8}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFilter,style:{marginRight:8},children:\"Filtrar\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClearFilter,style:{marginRight:16},children:\"Limpiar filtro\"}),showClearButton&&/*#__PURE__*/_jsx(\"button\",{onClick:handleClearDatabase,style:{backgroundColor:'red',color:'white'},children:\"Clear Database\"})]}),loading&&/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"}),!loading&&filteredTexts.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No texts found.\"}),/*#__PURE__*/_jsxs(\"table\",{border:\"1\",cellPadding:\"8\",cellSpacing:\"0\",style:{width:'100%',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Domicilio\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Tel\\xE9fono\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Secci\\xF3n\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Colonia\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Petici\\xF3n\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Referencia\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Creado por\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:filteredTexts.map(_ref2=>{let{id,content}=_ref2;const data=parseMapString(content);return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:data.nombre||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.domicilio||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.telefono||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.seccion||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.colonia||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.peticion||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.referencia||'N/A'}),/*#__PURE__*/_jsx(\"td\",{children:data.creadopor||'N/A'})]},id);})})]})]});}export default MainApp;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","MainApp","texts","setTexts","loading","setLoading","filterSection","setFilterSection","filteredTexts","setFilteredTexts","fetch","then","res","json","data","catch","parseMapString","mapString","cleanedString","trim","replace","regex","obj","match","exec","key","value","showClearButton","setShowClearButton","handleFilter","filtered","filter","_ref","content","seccion","handleClearFilter","handleClearDatabase","window","confirm","method","ok","alert","style","padding","children","marginBottom","type","placeholder","onChange","e","target","marginRight","onClick","backgroundColor","color","length","border","cellPadding","cellSpacing","width","borderCollapse","map","_ref2","id","nombre","domicilio","telefono","colonia","peticion","referencia","creadopor"],"sources":["/Users/armando-esparza/Documents/text scan/client/scanned-text-web/src/MainApp.js"],"sourcesContent":["// src/MainApp.js\nimport React, { useEffect, useState } from 'react';\n\nfunction MainApp() {\n  const [texts, setTexts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filterSection, setFilterSection] = useState('');\n  const [filteredTexts, setFilteredTexts] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/texts')\n      .then(res => res.json())\n      .then(data => {\n        setTexts(data);\n        setFilteredTexts(data);\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  const parseMapString = (mapString) => {\n    const cleanedString = mapString.trim().replace(/^\\{|\\}$/g, '');\n    const regex = /(\\w+)=((?:[^=,]|=(?!\\w+=))+)/g;\n    const obj = {};\n    let match;\n    while ((match = regex.exec(cleanedString)) !== null) {\n      const key = match[1];\n      const value = match[2].trim();\n      obj[key] = value;\n    }\n    return obj;\n  };\n\n  const [showClearButton, setShowClearButton] = useState(false); // Show or hide clear data base button\n\n  const handleFilter = () => {\n    if (!filterSection) {\n      setFilteredTexts(texts);\n      return;\n    }\n    const filtered = texts.filter(({ content }) => {\n      const data = parseMapString(content);\n      return data.seccion === filterSection;\n    });\n    setFilteredTexts(filtered);\n  };\n\n  const handleClearFilter = () => {\n    setFilterSection('');\n    setFilteredTexts(texts);\n  };\n\n  const handleClearDatabase = () => {\n    if (!window.confirm('Are you sure you want to clear the database? This action cannot be undone.')) return;\n    fetch('http://localhost:3000/texts', { method: 'DELETE' })\n      .then(res => {\n        if (res.ok) {\n          setTexts([]);\n          setFilteredTexts([]);\n          alert('Database cleared!');\n        } else {\n          alert('Failed to clear database');\n        }\n      })\n      .catch(() => alert('Error clearing database'));\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Info scaneada</h1>\n      <div style={{ marginBottom: 20 }}>\n        <input\n          type=\"text\"\n          placeholder=\"Filtrar por sección\"\n          value={filterSection}\n          onChange={(e) => setFilterSection(e.target.value)}\n          style={{ marginRight: 8 }}\n        />\n        <button onClick={handleFilter} style={{ marginRight: 8 }}>Filtrar</button>\n        <button onClick={handleClearFilter} style={{ marginRight: 16 }}>Limpiar filtro</button>\n        {showClearButton && (\n          <button onClick={handleClearDatabase} style={{ backgroundColor: 'red', color: 'white' }}>\n            Clear Database\n          </button>\n        )}\n      </div>\n      {loading && <p>Loading...</p>}\n      {!loading && filteredTexts.length === 0 && <p>No texts found.</p>}\n      <table border=\"1\" cellPadding=\"8\" cellSpacing=\"0\" style={{ width: '100%', borderCollapse: 'collapse' }}>\n        <thead>\n          <tr>\n            <th>Nombre</th>\n            <th>Domicilio</th>\n            <th>Teléfono</th>\n            <th>Sección</th>\n            <th>Colonia</th>\n            <th>Petición</th>\n            <th>Referencia</th>\n            <th>Creado por</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredTexts.map(({ id, content }) => {\n            const data = parseMapString(content);\n            return (\n              <tr key={id}>\n                <td>{data.nombre || 'N/A'}</td>\n                <td>{data.domicilio || 'N/A'}</td>\n                <td>{data.telefono || 'N/A'}</td>\n                <td>{data.seccion || 'N/A'}</td>\n                <td>{data.colonia || 'N/A'}</td>\n                <td>{data.peticion || 'N/A'}</td>\n                <td>{data.referencia || 'N/A'}</td>\n                <td>{data.creadopor || 'N/A'}</td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default MainApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}