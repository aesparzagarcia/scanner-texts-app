{"ast":null,"code":"var _jsxFileName = \"/Users/armando/scanned-text-web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [texts, setTexts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch('http://localhost:3000/texts').then(res => res.json()).then(data => {\n      setTexts(data);\n      setLoading(false);\n    }).catch(() => setLoading(false));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scanned Texts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 19\n    }, this), !loading && texts.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No texts stored yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: texts.map(({\n        id,\n        content,\n        created_at\n      }) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: new Date(created_at).toLocaleString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Z8CqW3NyVYfNkhH0Z6D4b/e547g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","texts","setTexts","loading","setLoading","fetch","then","res","json","data","catch","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","id","content","created_at","marginBottom","Date","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/armando/scanned-text-web/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction App() {\n  const [texts, setTexts] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('http://localhost:3000/texts')\n      .then(res => res.json())\n      .then(data => {\n        setTexts(data);\n        setLoading(false);\n      })\n      .catch(() => setLoading(false));\n  }, []);\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h1>Scanned Texts</h1>\n      {loading && <p>Loading...</p>}\n      {!loading && texts.length === 0 && <p>No texts stored yet.</p>}\n      <ul>\n        {texts.map(({ id, content, created_at }) => (\n          <li key={id} style={{ marginBottom: 20 }}>\n            <p>{content}</p>\n            <small>{new Date(created_at).toLocaleString()}</small>\n            <hr />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,6BAA6B,CAAC,CACjCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAI;MACZP,QAAQ,CAACO,IAAI,CAAC;MACdL,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,CACDM,KAAK,CAAC,MAAMN,UAAU,CAAC,KAAK,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1Bf,OAAA;MAAAe,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBd,OAAO,iBAAIL,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5B,CAACd,OAAO,IAAIF,KAAK,CAACiB,MAAM,KAAK,CAAC,iBAAIpB,OAAA;MAAAe,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9DnB,OAAA;MAAAe,QAAA,EACGZ,KAAK,CAACkB,GAAG,CAAC,CAAC;QAAEC,EAAE;QAAEC,OAAO;QAAEC;MAAW,CAAC,kBACrCxB,OAAA;QAAaa,KAAK,EAAE;UAAEY,YAAY,EAAE;QAAG,CAAE;QAAAV,QAAA,gBACvCf,OAAA;UAAAe,QAAA,EAAIQ;QAAO;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChBnB,OAAA;UAAAe,QAAA,EAAQ,IAAIW,IAAI,CAACF,UAAU,CAAC,CAACG,cAAc,CAAC;QAAC;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtDnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA,GAHCG,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV;AAACjB,EAAA,CA9BQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}